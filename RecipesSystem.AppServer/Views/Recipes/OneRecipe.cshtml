@model RecipesSystem.AppServer.Models.Recipe

@{
    ViewData["Title"] = "OneRecipe";
    Layout = "~/Views/Shared/LustigLayout.cshtml";
}
<body>
    <div class="nav-center">
        <div class="nav-links">
            <div class="nav-link">
                <a href="@Url.Action("Edit", "Recipes",new{id=Model.Id}) " class="btn">Edit</a>
            </div>
            <div class="nav-link">
                <a href="@Url.Action("Delete", "Recipes",new{id=Model.Id}) " class="btn">Delete</a>
            </div>
            <div class="nav-link">
                <a href="@Url.Action("Index", "Recipes") " class="btn">Save</a>
            </div>
        </div>
    </div>

    <main class="page">
        <div class="recipe-page">

            <section class="recipe-hero">

                <img src="@Url.Content(Model.ImageURL)"
                     class="img recipe-hero-img" />

                <article class="recipe-info">
                    <h2>@Html.DisplayFor(modelItem => Model.Name)</h2>
                    <p>
                        @Html.DisplayFor(modelItem => Model.Description)
                    </p>
                    <div class="recipe-icons">
                        <article>
                            <i class="fas fa-clock"></i>
                            <h5>prep time</h5>
                            <p>@Html.DisplayFor(modelItem => Model.TimeToMake) </p>
                        </article>
                        <article>
                            <i class="far fa-clock"></i>
                            <h5>cook time</h5>
                            <p>@Html.DisplayFor(modelItem => Model.CookingTime)</p>
                        </article>
                        <article>
                            <i class="fas fa-user-friends"></i>
                            <h5>serving</h5>
                            <p>@Html.DisplayFor(modelItem => Model.Diners)</p>
                        </article>
                    </div>
                    <div class="recipe-tags">
                        Tags :<a href="@Url.Action("TagTemplate", "Recipes",new{t=Model.Tag})">@Model.Tag.ToString() </a>
                        @{
                            if (Model.Weather != Weathers.NICE)
                            {
                                <a href="@Url.Action("Weather", "Recipes",new{t=(int)Model.Weather})">@Model.Weather.ToString() </a>
                            }
                            if (Model.Holiday != Holidays.NOTHOLIDAY)
                            {
                                <a href="@Url.Action("Holyday", "Recipes",new{t=(int)Model.Holiday})">@Model.Holiday.ToString() </a>
                            }

                        }
                    </div>
                </article>
            </section>
            <!-- content -->
            <section class="recipe-content">
                <article>
                    <h4>instructions</h4>
                    <!-- single instruction -->
                    <p>
                      
                    </p>
                    @{
                        string str = Model.PrepInstructions;
                        List<string> x = str.Split(".  ").ToList();
                        int s = 1;
                        foreach (var i in x)
                        {
                            <div class="single-instruction">
                                <header>
                                    <p>step @s.ToString()</p>
                                    <div></div>
                                </header>
                                <p>
                                    @i.ToString();
                                </p>
                            </div>
                            s++;
                        }
                    }
                </article>
                <article class="second-column">
                    <div>
                        <h4>ingredients</h4>
                        <p>
                         
                        </p>
                        @{
                            //will insert the user's data into an ordered list and differentiate between the values ​​of the components by space
                            string st = Model.Ingredients;
                            List<string> Ingredient = st.Split(", ").ToList();
                            foreach (var igredient in Ingredient)
                            {
                                <p class="single-ingredient">@igredient.ToString()</p>
                            }
                        }
                    </div>
                    <div>
                        @{

                            List<Nutriant> nutriants = new List<Nutriant>();
                            USDAadapter Uadapter = new USDAadapter();
                            List<DP.USDAparamsDTO.Nutrient> nutriant = Uadapter.Check(Model.Name, Model.Tag.ToString());
                            foreach (DP.USDAparamsDTO.Nutrient nutr in nutriant)
                            {
                                Nutriant nutre = new Nutriant();
                                nutre.Value = nutr.Value;
                                nutre.Name = nutr.Name;
                                nutre.RecipeId = Model.Id;
                                nutre.UnitOfMesurment = nutr.UnitName;
                                nutriants.Add(nutre);//add the nutriants to the list of the nutriants
                            }

                            if (nutriant != null)
                            {
                                if (nutriant.Count > 0)
                                {
                                    <h4>Nutriant</h4>
                                }
                                foreach (var ntur in nutriant)
                                @*//Goes over the nutritional values ​​of the food and presents them*@
                                {
                                    <p class="single-nutriant">@ntur.Name : @ntur.Value</p>

                                }
                            }
                        }

                    </div>
                </article>
            </section>
        </div>
    </main>
</body>
